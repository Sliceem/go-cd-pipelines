---
format_version: 10
common:
  deploy-task: &deploy-task
    - exec:
        command: bash
        arguments:
          - -c
          - echo "Building ${ENV_NAME} environment"
  test-task: &test-task
    - exec:
        command: bash
        arguments:
          - -c
          - echo "Test on ${ENV_NAME} environment"
    - exec:
        command: bash
        arguments:
          - -c
          - docker run --network=host -d -t --name api_test_executor_${ENV_NAME} api_test_executor:latest
    - exec:
        command: bash
        arguments:
          - -c
          - docker exec api_test_executor_${ENV_NAME} cucumber --tags=@${ENV_NAME} --format html --out test-output/report.html
    - exec:
        run_if: any
        command: bash
        arguments:
          - -c
          - docker cp api_test_executor_${ENV_NAME}:/usr/src/api-tests/test-output/report.html report_${ENV_NAME}.html
    - exec:
        run_if: any
        command: bash
        arguments:
          - -c
          - docker rm -f api_test_executor_${ENV_NAME}
    - exec:
        run_if: failed
        command: bash
        arguments:
          - -c
          - echo "Send INFO notification of fail"
pipelines:
  node-microservice:
    group: microservice
    materials:
      gitrepo:
        git: https://github.com/Sliceem/ci_course.git
        branch: main
    stages:
      - build:
          jobs:
            build:
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - echo "Building app"
      - deploy-dev:
          environment_variables:
            ENV_NAME: DEV
          jobs:
            build:
              tasks: *deploy-task
      - test-dev:
          environment_variables:
            ENV_NAME: DEV
          jobs:
            build:
              tasks: *test-task
      - deploy-int:
          environment_variables:
            ENV_NAME: INT
          jobs:
            build:
              tasks: *deploy-task
      - test-int:
          environment_variables:
            ENV_NAME: INT
          jobs:
            build:
              tasks: *deploy-task
      - deploy-prod:
          environment_variables:
            ENV_NAME: PROD
          jobs:
            build:
              tasks: *deploy-task
      - test-prod:
          environment_variables:
            ENV_NAME: PROD
          jobs:
            build:
              tasks: *deploy-task
